package com.example.catalog;

import com.google.gson.Gson;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

import javax.mail.*;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

public class StudentManagementServlet extends HttpServlet {



    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        try {
            Connection conn = DatabaseCon.initializeDatabase();
        } catch (SQLException e) {
            throw new RuntimeException(e);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        }
        String action = request.getParameter("action1");
        String userId = request.getParameter("studentId1");
        System.out.println(userId);
        String courseId = request.getParameter("courseId1");
        System.out.println(courseId);
        System.out.println(action);

        try {
            Connection conn = DatabaseCon.initializeDatabase();
            if ("Enroll".equals(action)) {
                String insertQuery = "INSERT INTO enrollments (user_id, course_id) VALUES (?, ?) ";
                //AND SELECT Email from users WHERE user_id=?
                PreparedStatement stmt = conn.prepareStatement(insertQuery);
                stmt.setInt(1, Integer.parseInt(userId));
                stmt.setString(2, courseId);
                //stmt.setString(3, userId);
                stmt.executeUpdate();
               // String toEmail = rs.getString("Email");
                //sendEmail(toEmail);
            } else if ("Disenroll".equals(action)) {
                String deleteQuery = "DELETE FROM enrollments WHERE user_id = ? AND course_id = ?";
                PreparedStatement stmt = conn.prepareStatement(deleteQuery);
                stmt.setInt(1, Integer.parseInt(userId));
                stmt.setString(2, courseId);
                stmt.executeUpdate();
            }

            // Redirect back to the modal with updated information
            response.sendRedirect("courseDetails.jsp?courseId=" + courseId);

        } catch (SQLException | ClassNotFoundException e) {
            throw new RuntimeException(e);
        }
    }
   /* public void sendEmail(String toEmail) {
        // Put recipient's address
        String to= toEmail;
        // Put sender's address
        String from = "adrian.paunescu998@gmail.com";
        final String username = "ccd9a0d344766a";//username generated by Mailtrap
        final String password = "8f379a288376c7";//password generated by Mailtrap
        // Paste host address from the SMTP settings tab in your Mailtrap Inbox
        String host = "sandbox.smtp.mailtrap.io";
        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");//itâ€™s optional in Mailtrap
        props.put("mail.smtp.host", host);
        props.put("mail.smtp.port", "2525");// use one of the options in the SMTP settings tab in your Mailtrap Inbox
        // Get the Session object.
        Session session = Session.getInstance(props,
                new javax.mail.Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication(username, password);
                    }
                });
        try {
            // Create a default MimeMessage object.
            Message message = new MimeMessage(session);
            // Set From: header field
            message.setFrom(new InternetAddress(from));
            // Set To: header field
            message.setRecipients(Message.RecipientType.TO,
                    InternetAddress.parse(toEmail));
            // Set Subject: header field
            message.setSubject("Registration to Courses");
            // Put the content of your message
            message.setText("You have been added to a course");
            // Send message
            Transport.send(message);
            System.out.println("You have been added to a course");
        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }
    }*/
}
