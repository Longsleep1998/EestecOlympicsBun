package com.example.catalog;
import java.util.Properties;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.util.Properties;
import javax.mail.*;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;

@WebServlet(name = "addUserServlet", value = "/add-user")
public class AddUserServlet extends HttpServlet {

    public String hashMessage(String message) throws NoSuchAlgorithmException {
        final MessageDigest digest = MessageDigest.getInstance("SHA3-256");
        final byte[] hashBytes = digest.digest(message.getBytes(StandardCharsets.UTF_8));
        return bytesToHex(hashBytes);
    }

    private static String bytesToHex(byte[] hash) {
        StringBuilder hexString = new StringBuilder(2 * hash.length);
        for (byte b : hash) {
            String hex = Integer.toHexString(0xff & b);
            if (hex.length() == 1) {
                hexString.append('0');
            }
            hexString.append(hex);
        }
        return hexString.toString();
    }

    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        try {

            Connection con = DatabaseCon.initializeDatabase();
            PreparedStatement st = con.prepareStatement(
                    "INSERT INTO users (username, password, firstName, lastName, yearOfStudy, classCurrent, Email, role) " +
                            "SELECT ?, ?, ?, ?, ?, ?, ?, ID FROM roles WHERE roles.Role = ?"
            );

            st.setString(1, request.getParameter("username"));
            st.setString(2, hashMessage(request.getParameter("password")));
            st.setString(3, request.getParameter("firstName"));
            st.setString(4, request.getParameter("lastName"));
            String yearOfStudyParam = request.getParameter("yearOfStudy");
            if (yearOfStudyParam == null || yearOfStudyParam.trim().isEmpty()) {
                st.setNull(5, java.sql.Types.INTEGER); // Set yearOfStudy to null
            } else {
                st.setInt(5, Integer.parseInt(yearOfStudyParam)); // Set the actual year of study
            }
            st.setString(6, request.getParameter("classCurrent"));
            String EmailParam = request.getParameter("Email");
            st.setString(7, request.getParameter("Email"));
            st.setString(8, request.getParameter("role"));

            st.executeUpdate();
            st.close();
            con.close();

            // Send email after successful registration
            String toEmail = EmailParam; // Assuming the email is stored in the 'Email' field
            sendEmail(toEmail);
            PrintWriter out = response.getWriter();
            out.println("<html><body><b>Successfully Registered</b><br><a href=\"login.jsp\">Login</a><br></body></html>");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public void sendEmail(String toEmail) {
            // Put recipient's address
            String to= toEmail;
            // Put sender's address
            String from = "adrian.paunescu998@gmail.com";
            final String username = "ccd9a0d344766a";//username generated by Mailtrap
            final String password = "8f379a288376c7";//password generated by Mailtrap
            // Paste host address from the SMTP settings tab in your Mailtrap Inbox
            String host = "sandbox.smtp.mailtrap.io";
            Properties props = new Properties();
            props.put("mail.smtp.auth", "true");
            props.put("mail.smtp.starttls.enable", "true");//itâ€™s optional in Mailtrap
            props.put("mail.smtp.host", host);
            props.put("mail.smtp.port", "2525");// use one of the options in the SMTP settings tab in your Mailtrap Inbox
            // Get the Session object.
            Session session = Session.getInstance(props,
                    new javax.mail.Authenticator() {
                        protected PasswordAuthentication getPasswordAuthentication() {
                            return new PasswordAuthentication(username, password);
                        }
                    });
            try {
                // Create a default MimeMessage object.
                Message message = new MimeMessage(session);
                // Set From: header field
                message.setFrom(new InternetAddress(from));
                // Set To: header field
                message.setRecipients(Message.RecipientType.TO,
                        InternetAddress.parse(toEmail));
                // Set Subject: header field
                message.setSubject("Registration to CatalogURL");
                // Put the content of your message
                message.setText("Your registration has been successful");
                // Send message
                Transport.send(message);
                System.out.println("You have registered successfully");
            } catch (MessagingException e) {
                throw new RuntimeException(e);
            }
        }
    }

